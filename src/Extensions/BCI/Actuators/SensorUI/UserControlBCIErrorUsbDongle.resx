<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonRetry.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACoAAAAhCAYAAACvBDmYAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABDJJREFUWEetmD1MVEEQgKe3obGnt6Gxv1obGiubqzUxFFrYobEw8Y8YCSgBUSQh
        hMKYmNhp1JjYXfyJJiZCUBSjEiIiIJDnfHtvce69ubv37ig+eG92d3Z2dnZm30mSJN0xK71K9d01Gf0+
        LjULMtpCH29sCVxhIdQANWZR/ydPBiUZPCZJ/2FJKofq8Izs/hlJfk/JNn2/3pITrq4CuMKWzEpldVJW
        Fkdkt1qRpOeAqJb20PfZedleuS2rC8Ny3NXdAlfYjOUxmVi7KzsDR31jioCnf92RXfXwY110jzePhyt0
        UU9+G5P13oO+AWw3Wx1hMcg8jyMjXNLQKWSsK/TYnJaHbJ+dEKMnT2qzxql6e+ntVZnTsLgIH2/IoxjD
        xClG27HA2KLGukKPnxMy9+qy7EQP4TWMQK7/m59qbfs0IkN/7snWUDXvYRYRwsAba3CFwAklJvdks9K3
        MyNrHKL1Kfmr7W+Q2TEtUa+pQTW7WOD586hst8sIrlCVVkgpGPVjXM4aeQ9tpQzMsHRTHmSNJSw2pmUz
        6HfGQF6onUkhHIa+XhXp9nZjmIca+5wtj4YCqavBKRlygqwSDCZvtlptaVQXHrQHjLQV5vH6Kw0vrIh4
        6TTgy0BmwIt2HnJ0s937/0IH3Wa22w6GogFfinq8hxQX50lT3YDXv/6gg8iDrSoO28Rp1777Fq/zw/LS
        5mbmJ/96fcMfTiKVwhrmQe5kQcEbGUWdQH5FZ9SPM0Lac/qGfEntzcZlM4grFuYpaweXEXJpRIvAMtsd
        dWMohcH2CXOpY1jVe1UQam/Ebgcxa9tql3ROUpZjSDuYlPEYFLFnAmfZNkIhzKXVjfjk4ksSj0xmt0Mn
        WM706SxO07SUvTN4YDSFgezAWE9Z1eZRBqhMmzL9OkUXShpqdguLpBeWWhznKtJb0JYdRDlVedefExEO
        Ed6yc1jweLak5pQE1IP2cLE6lLt9O0TL9Dy3KWsg4Ok08Vds/4bBEQ6YjSPitN2loTS6Q+ikdFpD8XTD
        rS2l4SVCysqWN068p6AbSFc2XvEwnvb65gSB9HTiyWho3JJ9LaOKVqdpnIJnyaF42uuXE0RIC9mAx3BV
        RPUob6wu/vUVOU2JnD4lR6xcT3f4ZGn1deoKI17Ak6DxLJ5gEm9cDj0YXOEIH3K0PidPz8mMaeeC0t8w
        JoMr3EO3ge3IJmjCgFxLW4hbrwCkk1O7WZi98HSSm11hA2qEZyzgXVKXVi5iK1SwD9dlgS8E3gkdDLSp
        Dggh/ar94s7XBFeYQ43lcGFUdlILBoB3p43QxgJUZ9Wdqwmu0EXDgG3kg89mg6KwwPiJHet3GVxhKzjx
        bC1eIRza1Ww8yIFMfyirsTue3na4wkLo1nFDx0Nq/AYnmgMGPL+4IBu0sag0Q3T1ZeAKS4MR9esfv4VC
        vA7uU8lN5B/YzSb9qQaRtAAAAABJRU5ErkJggg==
</value>
  </data>
</root>